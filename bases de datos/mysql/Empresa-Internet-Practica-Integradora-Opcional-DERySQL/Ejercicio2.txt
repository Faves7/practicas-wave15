
a. ¿Cuál es la primary key para la tabla de clientes? Justificar respuesta

Se creó un dato de tipo int llamado “client_id” para identificar unívocamente a cada cliente porque, según tengo entendido, hay casos de personas que poseen el mismo dni en nuestro país, entonces en el enunciado no se nombra ningún dato que pueda ser único para cada tupla de la tabla.

b. ¿Cuál es la primary key para la tabla de planes de internet? Justificar respuesta.

Se creó un dato de tipo int llamado “plan_id” para identificar unívocamente a cada plan porque, según el enunciado, hay un dato que hace referencia a la “identificación del plan” y este dato entero se utiliza para dicha identificación que, según entiendo, debe ser única en el sistema.

c. ¿Cómo serían las relaciones entre tablas? ¿En qué tabla debería haber foreign key? ¿A qué campo de qué tabla hace referencia dicha foreign key? Justificar respuesta.

Para este problema en particular, consideré que habrá una relación n:n entre ambas tablas. Así la empresa puede generar por un lado los clientes y por el otro lado los planes de internet sin relación y cuando un cliente contrata uno de los planes (que ya van a existir) se crea dicha relación. Entonces la misma persona cliente podría contratar mas de un plan y, un mismo plan, podría ser contratado por más de una persona, que me parece lo más cercano a la realidad. 
Debido a esto, hay que crear una tabla extra, que se llama “Client_PlanInternet” en donde cada registro hace referencia a la contratación de un plan de internet por parte de un cliente. Esta tabla es la única que contiene foreign keys, las cuales son “client_id” que hace referencia a la primary key de la tabla de clientes y “plan_id” que hace referencia a la primary key de la tabla de planes de internet.
El principal inconveniente con esta solución recae en otorgar descuentos personales a un determinado cliente, que podría solucionarse poniendo dicho atributo en la tabla de la relación n:n.

